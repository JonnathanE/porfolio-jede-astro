---
import ThemeToggle from "./ThemeToggle.astro";
import { Icon } from "astro-icon/components";

const navItems = [
  {
    title: "Inicio",
    label: "inicio",
    url: "/#top",
  },
  {
    title: "Sobre mí",
    label: "about-me",
    url: "/#about-me",
  },
  {
    title: "Habilidades",
    label: "skill",
    url: "/#skill",
  },
  {
    title: "Experiencia",
    label: "experience",
    url: "/#experience",
  },
  {
    title: "Proyectos",
    label: "my-work",
    url: "/#my-work",
  },

  // {
  //   title: "Services",
  //   label: "services",
  //   url: "/#services",
  // },
  // {
  //   title: "Contact me",
  //   label: "contact-me",
  //   url: "/#contact",
  // },
];
---

<header>
  <nav
    class="w-full fixed px-5 lg:px-8 xl:px-[8%] py-4 flex items-center justify-between z-50"
  >
    <!-- <img
      src="/images/logo.png"
      alt="Logo Jonnathan Espinoza"
      class="w-28 cursor-pointer mr-14"
    /> -->
    <a href="/" class="text-3xl font-bold cursor-pointer mr-14">JEDE</a>
    <ul
      id="navLinks"
      class="hidden md:flex items-center gap-6 lg:gap-8 rounded-full px-12 py-3 bg-white/50 shadow-sm dark:border dark:border-white/50 dark:bg-transparent"
    >
      {
        navItems.map((link) => (
          <li class="hover:text-primary">
            <a aria-label={link.label} href={link.url}>
              {link.title}
            </a>
          </li>
        ))
      }
    </ul>
    <div class="flex items-center gap-4">
      <button id="btnTheme" class="cursor-pointer">
        <Icon name="moon" size={24} class="w-6 dark:hidden text-gray-700" />
        <Icon
          name="SunHigh"
          size={24}
          class="w-6 hidden dark:block text-white"
        />
      </button>
      <a
        href="mailto:jonaes930@gmail.com"
        class="hidden lg:flex items-center gap-3 px-10 py-2.5 border border-gray-500 rounded-full ml-4 dark:border-white/50"
        >Contáctame
        <!-- <Icon name="arrow-up-right" size={25} class="text-gray-500" /> -->
        <img
          src="/images/arrow-icon.png"
          alt="contact"
          class="w-3 dark:hidden"
        />
        <img
          src="/images/arrow-icon-dark.png"
          alt="contact"
          class="w-3 hidden dark:block"
        />
      </a>
      <button id="btnMenu" class="block md:hidden ml-3">
        <img src="/images/menu-black.png" alt="" class="w-6 dark:hidden" />
        <img
          src="/images/menu-white.png"
          alt=""
          class="w-6 hidden dark:block"
        />
      </button>
    </div>
    <!-- Mobile menu -->
    <ul
      id="sideMenu"
      class="flex md:hidden flex-col gap-4 py-20 px-10 fixed -right-64 top-0 bottom-0 w-64 z-50 h-screen bg-white shadow-lg rounded-l-3xl transition duration-500 dark:bg-gray-800 dark:text-white"
    >
      <div id="divCloseMenu" class="absolute right-6 top-6">
        <img src="/images/close-black.png" alt="" class="w-5 dark:hidden" />
        <img
          src="/images/close-white.png"
          alt=""
          class="w-5 hidden dark:block"
        />
      </div>
      {
        navItems.map((link) => (
          <li>
            <a aria-label={link.label} href={link.url}>
              {link.title}
            </a>
          </li>
        ))
      }
    </ul>
  </nav>
</header>

<script>
  // This script is used to open and close the side menu on mobile devices
  const sideMenu = document.querySelector("#sideMenu") as HTMLUListElement;
  const menuButton = document.querySelector("#btnMenu") as HTMLButtonElement;
  const closeButton = sideMenu.querySelector("#divCloseMenu") as HTMLDivElement;

  // method to open the menu
  const openMenu = () => {
    sideMenu.style.transform = "translateX(-16rem)";
  };

  // method to close the menu
  const closeMenu = () => {
    sideMenu.style.transform = "translateX(16rem)";
  };

  // open menu when clicking on the menu button
  menuButton.addEventListener("click", openMenu);
  // close menu when clicking on the close button
  closeButton.addEventListener("click", closeMenu);
  // close menu when clicking outside
  document.addEventListener("click", (event) => {
    if (
      !sideMenu.contains(event.target as Node) &&
      !menuButton.contains(event.target as Node)
    ) {
      closeMenu();
    }
  });
  // close menu when clicking on a link
  sideMenu.addEventListener("click", (event) => {
    if (event.target instanceof HTMLAnchorElement) {
      closeMenu();
    }
  });

  // Add scrol event to navbar
  const navbar = document.querySelector("nav") as HTMLDivElement;
  const navLinks = document.querySelectorAll("#navLinks");

  window.addEventListener("scroll", () => {
    if (window.scrollY > 50) {
      navbar.classList.add(
        "bg-white/50",
        "backdrop-blur-lg",
        "shadow-sm",
        "dark:bg-darkTheme",
        "dark:shadow-white/20"
      );
      navLinks.forEach((link) =>
        link.classList.remove(
          "bg-white/50",
          "shadow-sm",
          "dark:border",
          "dark:border-white/50",
          "dark:bg-transparent"
        )
      );
    } else {
      navbar.classList.remove(
        "bg-white/50",
        "backdrop-blur-lg",
        "shadow-sm",
        "dark:bg-darkTheme",
        "dark:shadow-white/20"
      );
      navLinks.forEach((link) =>
        link.classList.add(
          "bg-white/50",
          "shadow-sm",
          "dark:border",
          "dark:border-white/50",
          "dark:bg-transparent"
        )
      );
    }
  });

  // dark mode toggle
  document.documentElement.classList.toggle(
    "dark",
    localStorage.theme === "dark" ||
      (!("theme" in localStorage) &&
        window.matchMedia("(prefers-color-scheme: dark)").matches)
  );

  function toggleTheme() {
    document.documentElement.classList.toggle("dark");
    if (document.documentElement.classList.contains("dark")) {
      localStorage.theme = "dark";
    } else {
      localStorage.theme = "light";
    }
  }

  const btnTheme = document.querySelector("#btnTheme") as HTMLButtonElement;
  btnTheme.addEventListener("click", toggleTheme);
</script>
